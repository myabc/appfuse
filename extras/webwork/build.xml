<!-- This file is designed to add WebWork support to AppFuse -->
<project name="webwork" basedir="." default="help">

    <property name="lib.dir" location="../../lib"/>
    <property file="${lib.dir}/lib.properties"/>

    <!-- =================================================================== -->
    <!-- List options for this build file                                    -->
    <!-- =================================================================== -->
    <target name="help" description="Print usage for key targets">
    <echo>
    Key Targets:
                install: Replaces Struts with WebWork
                   test: Creates appfuse-webwork project and runs tests 
                   
                   help: Print this help text...
    </echo>
    </target>

    <!-- =================================================================== -->
    <!-- Replaces Struts with WebWork                                     -->
    <!-- =================================================================== -->
    <target name="install"
        description="replaces Struts with WebWork in the AppFuse base project">
        <echo level="info">Copying WebWork JARs to ../../lib</echo>
        <copy todir="${lib.dir}">
            <fileset dir="lib" includes="**"/>
        </copy>
        <echo level="info">Adding WebWork entries to ../../lib.properties</echo>
        <replace file="${lib.dir}/lib.properties">
            <replacetoken><![CDATA[velocity.dir=${lib.dir}/velocity-${velocity.version}]]></replacetoken>
            <replacevalue><![CDATA[velocity.dir=${lib.dir}/velocity-${velocity.version}

#
# WebWork - http://www.opensymphony.com/webwork
#
webwork.version=2.1.1
webwork.dir=${lib.dir}/webwork-${webwork.version}]]></replacevalue>
        </replace>

        <echo level="info">Adding WebWork classpath entries</echo>
        <replace file="../../properties.xml">
            <replacetoken><![CDATA[<fileset dir="${javamail.dir}" includes="*.jar"/>
    <fileset dir="${spring.dir}" includes="*.jar"/>]]></replacetoken>
            <replacevalue><![CDATA[<fileset dir="${javamail.dir}" includes="*.jar"/>
    <fileset dir="${spring.dir}" includes="*.jar"/>
    <fileset dir="${webwork.dir}" includes="*.jar"/>]]></replacevalue>
        </replace>

        <echo level="info">Removing Struts-specific JARs</echo>
        <delete>
            <fileset dir="${struts.dir}">
                <include name="struts*.jar"/>
            </fileset>
        </delete>
        <delete dir="${strutstestcase.dir}"/>

        <replace file="${lib.dir}/lib.properties">
            <replacetoken><![CDATA[
#
# StrutsTestCase - http://strutstestcase.sourceforge.net
#
strutstestcase.version=2.1.2
strutstestcase.dir=${lib.dir}/strutstest-${strutstestcase.version}
strutstestcase.jar=${strutstestcase.dir}/strutstest-${strutstestcase.version}.jar]]></replacetoken>
            <replacevalue></replacevalue>
        </replace>

        <replace file="${lib.dir}/lib.properties">
            <replacetoken><![CDATA[struts.jar=${struts.dir}/struts.jar]]></replacetoken>
            <replacevalue></replacevalue>
        </replace>
        
        <echo level="info">Deleting struts_form.xdt for XDoclet</echo>
        <delete dir="../../metadata/templates"/>

        <echo level="info">Deleting Struts merge-files in metadata/web</echo>
        <delete>
            <fileset dir="../../metadata/web">
                <include name="global-*.xml"/>
                <include name="struts-*.xml"/>
                <include name="xdoclet-*.java"/>
            </fileset>
        </delete>
        <echo level="info">Replacing Struts servlet with WebWork</echo>
        <copy todir="../../metadata/web" overwrite="true">
            <fileset dir="metadata/web" includes="*.xml"/>
        </copy>
        
        <echo level="info">Adding action-servlet.xml to the list of context files</echo>
        <replace file="../../metadata/web/web-settings.xml">
            <replacetoken>/WEB-INF/applicationContext-*.xml</replacetoken>
            <replacevalue>/WEB-INF/applicationContext-*.xml,/WEB-INF/action-servlet.xml</replacevalue>
        </replace>
        
        <echo level="info">Deleting unused Tag Libraries and Utilities</echo>
        <delete>
            <fileset dir="../../src/web/org/appfuse/webapp">
                <include name="taglib/LabelTag.java"/>
                <include name="util/ValidationUtil.java"/>
            </fileset>
        </delete>

        <!-- Modify appgen for WebWork -->
        <echo level="info">Modifying appgen for WebWork</echo>
        <copy todir="../appgen" overwrite="true">
            <fileset dir="extras/appgen" includes="**"/>
        </copy>
        <!-- Add templates to the list appgen/build.xml -->
        <replace file="../appgen/build.xml">
            <replacetoken><![CDATA[<!-- Generic Action -->
            <template templateFile="${template.dir}/generic/Action.xdt"
                      acceptAbstractClasses="false"
                      prefixWithPackageStructure="false"
                      destinationFile="${gen.dir}/generic/src/web/${app.package}/webapp/action/{0}Action.java"/>]]></replacetoken>
            <replacevalue><![CDATA[<!-- Generic Action -->
            <template templateFile="${template.dir}/generic/Action.xdt"
                      acceptAbstractClasses="false"
                      prefixWithPackageStructure="false"
                      destinationFile="${gen.dir}/generic/src/web/${app.package}/webapp/action/{0}Action.java"/>
            <!-- XWork actions -->
            <template templateFile="${template.dir}/xwork.xdt"
                      acceptAbstractClasses="false"
                      prefixWithPackageStructure="false"
                      destinationFile="${gen.dir}/web/WEB-INF/classes/xwork-{0}.xml"/>
            <!-- Action bean definitions -->
            <template templateFile="${template.dir}/action-servlet.xdt"
                      acceptAbstractClasses="false"
                      prefixWithPackageStructure="false"
                      destinationFile="${gen.dir}/web/WEB-INF/action-servlet-{0}.xml"/>
            <!-- Action validation -->
            <template templateFile="${template.dir}/Action-validation.xdt"
                      acceptAbstractClasses="false"
                      prefixWithPackageStructure="false"
                      destinationFile="${gen.dir}/src/web/${app.package}/webapp/action/{0}Action-validation.xml"/>
            <!-- Model validation -->
            <template templateFile="${template.dir}/validation.xdt"
                      acceptAbstractClasses="false"
                      prefixWithPackageStructure="false"
                      destinationFile="${gen.dir}/src/dao/${app.package}/model/{0}-validation.xml"/>]]></replacevalue>
        </replace>
        
        <!-- Modify web-tests.xdt template to user model.propertyName -->
        <replace file="../appgen/src/web-tests.xdt">
            <replacetoken><![CDATA[name="<XDtMethod:propertyName/>" value]]></replacetoken>
            <replacevalue><![CDATA[name="<XDtForm:classNameLower/>.<XDtMethod:propertyName/>" value]]></replacevalue>
        </replace>
        
        <!-- Modify XML to modify action-servlet.xml -->
        <replace file="../appgen/build.xml">
            <replacetoken><![CDATA[<echo>Merging sample-data into metadata/sql/sample-data.xml</echo>]]></replacetoken>
            <replacevalue><![CDATA[
        <echo>Merging controller configuration XML into web/WEB-INF/action-servlet.xml</echo>
        <loadfile property="action.beans"
            srcfile="${generated.dir}/web/WEB-INF/action-servlet-${model.name}.xml"/>
        <!-- Replace strategically placed comment -->   
        <replace file="../../web/WEB-INF/action-servlet.xml" 
            token="&lt;!-- Add additional actions here --&gt;"
            value="${action.beans}"/>

        <loadfile property="xwork.actions"
            srcfile="${generated.dir}/web/WEB-INF/classes/xwork-${model.name}.xml"/>
        <!-- Replace strategically placed comment -->   
        <replace file="../../web/WEB-INF/classes/xwork.xml" 
            token="&lt;!-- Add additional actions here --&gt;"
            value="${xwork.actions}"/>
            
        <echo>Copying validation XML files to appropriate locations</echo>
        <copy todir="../.." overwrite="${overwrite}">
            <fileset dir="${generated.dir}" includes="**/*-validation.xml"/>
        </copy>
        
        <echo>Merging sample-data into metadata/sql/sample-data.xml</echo>]]></replacevalue>
        </replace>
        
        <!-- Copy source and tests -->    
        <echo level="info">Replacing source and test files</echo>
        <copy todir="../../extras/viewgen" overwrite="true">
            <fileset dir="extras/viewgen" includes="**"/>
        </copy>
        <delete dir="../../src/web/org/appfuse/webapp/form"/>
        <delete>
            <fileset dir="../../src/web/org/appfuse/webapp/action">
                <exclude name="LoginServlet.java"/>
            </fileset>
        </delete>
        <copy todir="../../src" overwrite="true">
            <fileset dir="src" includes="**"/>
        </copy>
        <delete dir="../../test/web/org/appfuse/webapp/form"/>
        <delete>
            <fileset dir="../../test/web/org/appfuse/webapp/action">
                <exclude name="LoginServlet*"/>
            </fileset>
        </delete> 
        <copy todir="../../test" overwrite="true">
            <fileset dir="test" includes="**"/>
        </copy>
        
        <!-- Remove @web.listener from StartupListener since it's in the 
             listeners.xml file - to ensure it loads before the SpringObjectFactoryListener -->
        <replace file="../../src/web/org/appfuse/webapp/listener/StartupListener.java">
            <replacetoken> *
 * @web.listener</replacetoken>
            <replacevalue> *</replacevalue>
        </replace>
        
        <!-- Copy web files (JSPs, images, scripts, stylesheets) -->
        <echo level="info">Replacing web files (images, scripts, JSPs, etc.)</echo>
        <copy todir="../../web" overwrite="true">
            <fileset dir="web" includes="**"/>
        </copy>
        <delete file="../../web/WEB-INF/validator-rules-custom.xml"/>
        
        <echo level="info">Modifying Eclipse .classpath file</echo>
        <replace file="../../.classpath">
            <replacetoken><![CDATA[<classpathentry kind="src" path="build/web/gen"/>]]></replacetoken>
            <replacevalue></replacevalue>
        </replace>
        <replace file="../../.classpath">
            <replacetoken><![CDATA[<classpathentry kind="lib" path="lib/strutstest-2.1.2/strutstest-2.1.2.jar"/>]]></replacetoken>
            <replacevalue></replacevalue>
        </replace>
        <replace file="../../.classpath">
            <replacetoken><![CDATA[<classpathentry kind="lib" path="lib/jakarta-struts-1.2.4/lib/struts.jar"/>
	<classpathentry kind="lib" path="lib/jakarta-struts-1.2.4/lib/struts-el.jar"/>]]></replacetoken>
            <replacevalue><![CDATA[<classpathentry kind="lib" path="lib/webwork-2.1.1/ognl.jar"/>
	<classpathentry kind="lib" path="lib/webwork-2.1.1/oscore.jar"/>
	<classpathentry kind="lib" path="lib/webwork-2.1.1/spring-xwork-integration.jar"/>
	<classpathentry kind="lib" path="lib/webwork-2.1.1/webwork-2.1.1.jar"/>
	<classpathentry kind="lib" path="lib/webwork-2.1.1/xwork-1.0.3.jar"/>]]></replacevalue>
        </replace>

        <echo level="info">Refactoring build.xml</echo>

        <!-- Remove web/gen from uptodate check for webdoclet -->
        <replace file="../../build.xml">
            <replacetoken><![CDATA[<srcfiles dir="src/web" includes="**/*.java"/>
            <srcfiles dir="${build.dir}/web/gen" includes="**/*.java"/>]]></replacetoken>
            <replacevalue><![CDATA[<srcfiles dir="src/web" includes="**/*.java"/>]]></replacevalue>
        </replace>
        
        <!-- Remove templates path from new target -->
        <replace file="../../build.xml">
            <replacetoken><![CDATA[<include name="metadata/templates/*.xdt"/>]]></replacetoken>
        </replace>
        
        <!-- Add excluded files to the new target -->
        <replace file="../../build.xml">
            <replacetoken><![CDATA[<exclude name="metadata/web/global-exceptions.xml"/>]]></replacetoken>
            <replacevalue><![CDATA[<exclude name="metadata/web/listeners.xml"/>
                <exclude name="web/WEB-INF/classes/xwork.xml"/>]]></replacevalue>
        </replace>
        
        <!-- Remove gen-forms target -->
        <replace file="../../build.xml">
            <replacetoken><![CDATA[
    <!-- Generate ActionForms from POJOs -->
    <target name="gen-forms" depends="prepare" unless="webdoclet.uptodate"
        description="Generates ActionForms from POJOs">
        <taskdef name="xdoclet" classname="xdoclet.DocletTask"
            classpathref="xdoclet.classpath"/>

        <!-- generate struts forms -->
        <xdoclet destdir="${build.dir}/web/gen"
            excludedtags="@version,@author"
            addedtags="@xdoclet-generated at ${TODAY}"
            force="${xdoclet.force}"
            mergedir="metadata/web">
            <fileset dir="src/dao"/>

            <!-- generate struts forms -->
            <actionform templateFile="metadata/templates/struts_form.xdt">
                <packageSubstitution packages="model"
                    substituteWith="webapp.form"/>
            </actionform>
        </xdoclet>
    </target>

    <target name="compile-web" depends="package-service,stage-web,gen-forms"]]></replacetoken>
            <replacevalue><![CDATA[<target name="compile-web" depends="package-service,stage-web"]]></replacevalue>
        </replace>
        <replace file="../../build.xml">
            <replacetoken><![CDATA[<param name="additional.src.dirs"
                value="${build.dir}/web/gen"/>
]]></replacetoken>
            <replacevalue></replacevalue>
        </replace>
        
        <replace file="../../build.xml">
            <replacetoken><![CDATA[    <!-- The "webdoclet" target generates web and struts deployment          -->
    <!-- descriptors.                                                        --> 
    <!-- =================================================================== -->
    <target name="webdoclet" depends="compile-web" 
        unless="webdoclet.unnecessary"
        description="Generate web and Struts descriptors">
        <taskdef name="webdoclet" classname="xdoclet.modules.web.WebDocletTask">
            <classpath>
                <path refid="xdoclet.classpath"/>
                <path refid="web.compile.classpath"/>
            </classpath>
        </taskdef>
        <webdoclet destdir="${webapp.target}/WEB-INF"
            force="${xdoclet.force}"
            mergedir="metadata/web"
            excludedtags="@version,@author"
            verbose="true">
            <fileset dir="src/web"/>
            <fileset dir="${build.dir}/web/gen"/>
            <deploymentdescriptor validateXML="true"
                servletspec="2.3" sessiontimeout="10"
                destdir="${webapp.target}/WEB-INF" distributable="false"
                displayname="${ant.project.name}">
                <configParam name="httpPort" value="${http.port}"/>
                <configParam name="httpsPort" value="${https.port}"/>
                <configParam name="daoType" value="${dao.type}"/>
                <configParam name="security" value="${security.mode}"/>
            </deploymentdescriptor>
            <jsptaglib validateXML="true"
                description="Custom tag library for this application"
                shortName="${webapp.name}" filename="${webapp.name}.tld"/>
            <strutsconfigxml validateXML="true" version="1.2"/>
            <strutsvalidationxml/>
]]></replacetoken>
            <replacevalue><![CDATA[    <!-- The "webdoclet" target generates web deployment descriptors.           -->
    <!-- =================================================================== -->
    <target name="webdoclet" depends="compile-web" 
        unless="webdoclet.unnecessary"
        description="Generate web deployment descriptors">
        <taskdef name="webdoclet"
            classname="xdoclet.modules.web.WebDocletTask">
            <classpath>
                <path refid="xdoclet.classpath"/>
                <path refid="web.compile.classpath"/>
            </classpath>
        </taskdef>
        <webdoclet destdir="${webapp.target}/WEB-INF"
            force="${xdoclet.force}"
            mergedir="metadata/web"
            excludedtags="@version,@author"
            verbose="true">
            <fileset dir="src/web"/>
            <deploymentdescriptor validateXML="true"
                servletspec="2.3" sessiontimeout="10"
                destdir="${webapp.target}/WEB-INF" distributable="false"
                displayname="${ant.project.name}">
                <configParam name="httpPort" value="${http.port}"/>
                <configParam name="httpsPort" value="${https.port}"/>
                <configParam name="daoType" value="${dao.type}"/>
                <configParam name="security" value="${security.mode}"/>
            </deploymentdescriptor>
            <jsptaglib validateXML="true"
                description="Custom tag library for this application"
                shortName="${webapp.name}" filename="${webapp.name}.tld"/>
]]></replacevalue>
        </replace>

        <replace file="../../build.xml">
            <replacetoken><![CDATA[<webinf dir="${struts.dir}" includes="*.xml"/>]]></replacetoken>
            <replacevalue></replacevalue>
        </replace>
        
        <replace file="../../build.xml">
            <replacetoken><![CDATA[<lib dir="${spring.dir}" includes="*.jar"/>]]></replacetoken>
            <replacevalue><![CDATA[<lib dir="${spring.dir}" includes="*.jar"/>
            <lib file="${commons-fileupload.jar}"/>
            <lib file="${requesttag.jar}"/>
            <lib dir="${webwork.dir}" includes="*.jar"/>]]></replacevalue>
        </replace>
        
        <replace file="../../build.xml">
            <replacetoken><![CDATA[<target name="test-web" depends="webdoclet,db-load"
        description="Test web module">
        <copy todir="${webapp.target}/WEB-INF" 
            file="${struts.dir}/validator-rules.xml"/>
        <antcall target="test-module" inheritAll="true">
            <param name="module" value="web"/>
            <reference refid="web.test.classpath"
                torefid="test.classpath"/>
        </antcall>
    </target>]]></replacetoken>
            <replacevalue><![CDATA[<target name="test-web" depends="webdoclet,db-load"
        description="Test web module">
        <antcall target="test-module" inheritAll="true">
            <param name="module" value="web"/>
            <reference refid="web.test.classpath"
                torefid="test.classpath"/>
        </antcall>
    </target>]]></replacevalue>
        </replace>
        
        <replace file="../../build.xml">
            <replacetoken><![CDATA[<lib dir="${strutstestcase.dir}" includes="*.jar"/>]]></replacetoken>
            <replacevalue></replacevalue>
        </replace>
        
        <echo level="info">Removing Spring MVC installation option</echo>
        <delete dir="../../extras/spring"/>
        
        <echo>----------------------------------------------</echo>
        <echo level="info">NOTE: It's recommended you delete extras/webwork as you shouldn't need it anymore.</echo>
        <echo>----------------------------------------------</echo>
    </target>
 
    <!-- =================================================================== -->
    <!-- Creates new project, installs WebWork and runs tests                -->
    <!-- =================================================================== -->
    <target name="test" description="Creates appfuse-webwork and runs tests">
        <property name="app.name" value="appfuse-webwork"/>
        <property name="db.name" value="appfuse"/>   
        <delete dir="../../../${app.name}"/>
        <ant dir="../.." target="new"/>

        <!-- New project created, install WebWork and run tests -->
        <ant dir="../../../${app.name}/extras/webwork" target="install" inheritAll="false"/>
        <!--ant dir="../../../${app.name}" target="setup" inheritAll="false"/>
        <ant dir="../../../${app.name}" target="test-all" inheritAll="false"/-->

        <echo>Start Tomcat to view ${app.name} manually.</echo>
    </target>

    <!-- =================================================================== -->
    <!-- Creates new project, installs WebWork+iBATIS and runs tests         -->
    <!-- =================================================================== -->
    <target name="test-ibatis"
        description="Creates appfuse-webwork-ibatis and runs tests">
        <property name="app.name" value="appfuse-wibatis"/>
        <property name="db.name" value="appfuse"/>
        <delete dir="../../../${app.name}"/>
        <ant dir="../.." target="new"/>

        <!-- New project created, install Spring MVC and run tests -->
        <ant dir="../../../${app.name}/extras/ibatis" target="install" inheritAll="false"/>
        <ant dir="../../../${app.name}/extras/ibatis" target="uninstall-hibernate" inheritAll="false"/>
        <ant dir="../../../${app.name}/extras/webwork" target="install" inheritAll="false"/>
        <ant dir="../../../${app.name}" target="setup" inheritAll="false"/>
        <ant dir="../../../${app.name}" target="test-all" inheritAll="false"/>

        <echo>Start Tomcat to view ${app.name} manually.</echo>
    </target>

    <!-- =================================================================== -->
    <!-- Creates new project, installs WebWork and tests appgen              -->
    <!-- =================================================================== -->
    <target name="test-appgen" description="Creates appfuse-webwork and tests appgen">
        <property name="app.name" value="appfuse-wwgen"/>
        <property name="db.name" value="appfuse"/>
        <delete dir="../../../${app.name}"/>
        <ant dir="../.." target="new"/>

        <!-- New project created, install WebWork -->
        <ant dir="../../../${app.name}/extras/webwork" target="install" inheritAll="false"/>
        <!-- Gen code and run tests -->
        <ant dir="../../../${app.name}/extras/appgen" target="test-all" inheritAll="false">
            <property name="model.name" value="Person"/>
            <property name="model.name.lowercase" value="person"/>   
        </ant>   
    </target>
    
    <target name="test-all" depends="test" 
        description="Tests WebWork install with Hibernate, iBATIS and AppGen">
        <antcall target="test-ibatis" inheritAll="false"/>
        <antcall target="test-appgen" inheritAll="false"/>
    </target>
</project>

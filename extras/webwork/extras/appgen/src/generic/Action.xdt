<XDtTagDef:tagDef namespace="Form" handler="org.example.antbook.xdoclet.FormTagsHandler"/>package <XDtForm:parentPackageName/>.webapp.action;

import java.util.List;

import <XDtPackage:packageName/>.<XDtForm:className/>;
import <XDtForm:parentPackageName/>.service.Manager;

public class <XDtForm:className/>Action extends BaseAction {
    private <XDtForm:className/> <XDtForm:classNameLower/>;
    private List <XDtForm:classNameLower/>s;
    private String <XDtMethodEx:idField getType="propertyName"/>;
    private Manager manager;

    public void <XDtMethodEx:idField getType="setterName"/>(String <XDtMethodEx:idField getType="propertyName"/>) {
        this.<XDtMethodEx:idField getType="propertyName"/> = <XDtMethodEx:idField getType="propertyName"/>;
    }

    public void setManager(Manager manager) {
        this.manager = manager;
    }

    public <XDtForm:className/> get<XDtForm:className/>() {
        return <XDtForm:classNameLower/>;
    }

    public void set<XDtForm:className/>(<XDtForm:className/> <XDtForm:classNameLower/>) {
        this.<XDtForm:classNameLower/> = <XDtForm:classNameLower/>;
    }

    public String delete() {
        manager.removeObject(<XDtForm:className/>.class, <XDtForm:classNameLower/>.<XDtMethodEx:idField getType="getterName"/>());
        saveMessage(getText("<XDtForm:classNameLower/>.deleted"));

        return SUCCESS;
    }

    public String edit() {
        if (<XDtMethodEx:idField getType="propertyName"/> != null) {
            <XDtForm:classNameLower/> = (<XDtForm:className/>) manager.getObject(<XDtForm:className/>.class, new <XDtMethodEx:idField getType="propertyType"/>(<XDtMethodEx:idField getType="propertyName"/>));
        } else {
            <XDtForm:classNameLower/> = new <XDtForm:className/>();
        }

        return SUCCESS;
    }

    public String save() throws Exception {
        if (cancel != null) {
            return "cancel";
        }

        if (delete != null) {
            return delete();
        }

        boolean isNew = (<XDtForm:classNameLower/>.<XDtMethodEx:idField getType="getterName"/>() == null);

        manager.saveObject(<XDtForm:classNameLower/>);

        String key = (isNew) ? "<XDtForm:classNameLower/>.added" : "<XDtForm:classNameLower/>.updated";
        saveMessage(getText(key));

        if (!isNew) {
            return INPUT;
        } else {
            return SUCCESS;
        }
    }

    public List get<XDtForm:className/>s() {
        return <XDtForm:classNameLower/>s;
    }

    public String list() {
        <XDtForm:classNameLower/>s = manager.getObjects(<XDtForm:className/>.class);

        return SUCCESS;
    }
}

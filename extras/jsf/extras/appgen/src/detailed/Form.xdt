<XDtTagDef:tagDef namespace="Form" handler="org.example.antbook.xdoclet.FormTagsHandler"/><XDtTagDef:tagDef namespace="MethodEx" handler="org.example.antbook.xdoclet.MethodExTagsHandler"/>
package <XDtForm:parentPackageName/>.webapp.action;

import java.io.Serializable;

import <XDtPackage:packageName/>.<XDtClass:className/>;
import <XDtForm:parentPackageName/>.service.<XDtClass:className/>Manager;

public class <XDtClass:className/>Form extends BasePage implements Serializable {
    private <XDtClass:className/>Manager <XDtForm:classNameLower/>Manager;
    private <XDtClass:className/> <XDtForm:classNameLower/> = new <XDtClass:className/>();
    private String <XDtMethodEx:idField getType="propertyName"/>;

    public void set<XDtClass:className/>Manager(<XDtClass:className/>Manager manager) {
        this.<XDtForm:classNameLower/>Manager = manager;
    }

    public <XDtClass:className/> get<XDtClass:className/>() {
        return <XDtForm:classNameLower/>;
    }

    public void set<XDtClass:className/>(<XDtClass:className/> <XDtForm:classNameLower/>) {
        this.<XDtForm:classNameLower/> = <XDtForm:classNameLower/>;
    }
    
    public void <XDtMethodEx:idField getType="setterName"/>(String <XDtMethodEx:idField getType="propertyName"/>) {
        this.<XDtMethodEx:idField getType="propertyName"/> = <XDtMethodEx:idField getType="propertyName"/>;
    }

    public String delete() {
        <XDtForm:classNameLower/>Manager.remove<XDtClass:className/>(String.valueOf(<XDtForm:classNameLower/>.<XDtMethodEx:idField getType="getterName"/>()));
        addMessage("<XDtForm:classNameLower/>.deleted");

        return "list";
    }

    public String edit() {
        if (<XDtMethodEx:idField getType="propertyName"/> != null) {
            <XDtForm:classNameLower/> = <XDtForm:classNameLower/>Manager.get<XDtClass:className/>(<XDtMethodEx:idField getType="propertyName"/>);
        } else {
            <XDtForm:classNameLower/> = new <XDtClass:className/>();
        }

        return "edit";
    }

    public String save() {
        boolean isNew = (<XDtForm:classNameLower/>.<XDtMethodEx:idField getType="getterName"/>() == null);

        <XDtForm:classNameLower/>Manager.save<XDtClass:className/>(<XDtForm:classNameLower/>);

        String key = (isNew) ? "<XDtForm:classNameLower/>.added" : "<XDtForm:classNameLower/>.updated";
        addMessage(key);

        if (isNew) {
            return "list";
        } else {
            return "edit";
        }
    }
}

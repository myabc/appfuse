<XDtTagDef:tagDef namespace="Form" handler="org.example.antbook.xdoclet.FormTagsHandler"/>package <XDtForm:parentPackageName/>.webapp.action;

import java.util.Locale;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang.StringUtils;
import <XDtPackage:packageName/>.<XDtClass:className/>;
import <XDtForm:parentPackageName/>.service.<XDtClass:className/>Manager;
import org.springframework.validation.BindException;
import org.springframework.web.servlet.ModelAndView;

public class <XDtClass:className/>FormController extends BaseFormController {
    private <XDtClass:className/>Manager <XDtForm:classNameLower/>Manager = null;

    public void set<XDtClass:className/>Manager(<XDtClass:className/>Manager <XDtForm:classNameLower/>Manager) {
        this.<XDtForm:classNameLower/>Manager = <XDtForm:classNameLower/>Manager;
    }

    protected Object formBackingObject(HttpServletRequest request)
    throws Exception {
        String <XDtMethodEx:idField getType="propertyName"/> = request.getParameter("<XDtMethodEx:idField getType="propertyName"/>");
        <XDtClass:className/> <XDtForm:classNameLower/> = null;

        if (!StringUtils.isEmpty(<XDtMethodEx:idField getType="propertyName"/>)) {
            <XDtForm:classNameLower/> = <XDtForm:classNameLower/>Manager.get<XDtClass:className/>(<XDtMethodEx:idField getType="propertyName"/>);
        } else {
            <XDtForm:classNameLower/> = new <XDtClass:className/>();
        }

        return <XDtForm:classNameLower/>;
    }

    public ModelAndView onSubmit(HttpServletRequest request,
                                 HttpServletResponse response, Object command,
                                 BindException errors)
    throws Exception {
        if (log.isDebugEnabled()) {
            log.debug("entering 'onSubmit' method...");
        }

        <XDtClass:className/> <XDtForm:classNameLower/> = (<XDtClass:className/>) command;
        boolean isNew = (<XDtForm:classNameLower/>.<XDtMethodEx:idField getType="getterName"/>() == null);
        Locale locale = request.getLocale();

        if (request.getParameter("delete") != null) {
            <XDtForm:classNameLower/>Manager.remove<XDtClass:className/>(<XDtForm:classNameLower/>.<XDtMethodEx:idField getType="getterName"/>().toString());

            saveMessage(request, getText("<XDtForm:classNameLower/>.deleted", locale));
        } else {
            <XDtForm:classNameLower/>Manager.save<XDtClass:className/>(<XDtForm:classNameLower/>);

            String key = (isNew) ? "<XDtForm:classNameLower/>.added" : "<XDtForm:classNameLower/>.updated";
            saveMessage(request, getText(key, locale));

            if (!isNew) {
            	return new ModelAndView("redirect:edit<XDtClass:className/>.html", "<XDtMethodEx:idField getType="propertyName"/>", <XDtForm:classNameLower/>.<XDtMethodEx:idField getType="getterName"/>());
            }
        }

        return new ModelAndView(getSuccessView());
    }
}

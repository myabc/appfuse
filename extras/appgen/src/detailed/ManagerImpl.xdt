<XDtTagDef:tagDef namespace="Form" handler="org.example.antbook.xdoclet.FormTagsHandler"/>
<XDtTagDef:tagDef namespace="MethodEx" handler="org.example.antbook.xdoclet.MethodExTagsHandler"/>
package <XDtForm:parentPackageName/>.service.impl;

import java.util.List;

import <XDtPackage:packageName/>.<XDtClass:className/>;
import <XDtForm:parentPackageName/>.dao.<XDtClass:className/>DAO;
import <XDtForm:parentPackageName/>.service.<XDtClass:className/>Manager;

public class <XDtClass:className/>ManagerImpl extends BaseManager implements <XDtClass:className/>Manager {
    private <XDtClass:className/>DAO dao;

    /**
     * Set the DAO for communication with the data layer.
     * @param dao
     */
    public void set<XDtClass:className/>DAO(<XDtClass:className/>DAO dao) {
        this.dao = dao;
    }

    /**
     * @see <XDtForm:parentPackageName/>.service.<XDtClass:className/>Manager#get<XDtClass:className/>s(<XDtPackage:packageName/>.<XDtClass:className/>)
     */
    public List get<XDtClass:className/>s(final <XDtClass:className/> <XDtForm:classNameLower/>) {
        return dao.get<XDtClass:className/>s(<XDtForm:classNameLower/>);
    }

    /**
     * @see <XDtForm:parentPackageName/>.service.<XDtClass:className/>Manager#get<XDtClass:className/>(String <XDtMethodEx:idField getType="propertyName"/>)
     */
    public <XDtClass:className/> get<XDtClass:className/>(final String <XDtMethodEx:idField getType="propertyName"/>) {
        return dao.get<XDtClass:className/>(new <XDtMethodEx:idField getType="propertyType"/>(<XDtMethodEx:idField getType="propertyName"/>));
    }

    /**
     * @see <XDtForm:parentPackageName/>.service.<XDtClass:className/>Manager#save<XDtClass:className/>(<XDtClass:className/> <XDtForm:classNameLower/>)
     */
    public void save<XDtClass:className/>(<XDtClass:className/> <XDtForm:classNameLower/>) {
        dao.save<XDtClass:className/>(<XDtForm:classNameLower/>);
    }

    /**
     * @see <XDtForm:parentPackageName/>.service.<XDtClass:className/>Manager#remove<XDtClass:className/>(String <XDtMethodEx:idField getType="propertyName"/>)
     */
    public void remove<XDtClass:className/>(final String <XDtMethodEx:idField getType="propertyName"/>) {
        dao.remove<XDtClass:className/>(new <XDtMethodEx:idField getType="propertyType"/>(<XDtMethodEx:idField getType="propertyName"/>));
    }
}

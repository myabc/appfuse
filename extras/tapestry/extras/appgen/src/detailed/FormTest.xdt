<XDtTagDef:tagDef namespace="Form" handler="org.example.antbook.xdoclet.FormTagsHandler"/>package <XDtForm:parentPackageName/>.webapp.action;

import java.util.ResourceBundle;

import <XDtPackage:packageName/>.<XDtClass:className/>;
import <XDtForm:parentPackageName/>.service.<XDtClass:className/>Manager;

public class <XDtClass:className/>FormTest extends BasePageTestCase {
    private <XDtClass:className/>Form page;
	private <XDtClass:className/>Manager <XDtForm:classNameLower/>Manager;

    protected void setUp() throws Exception {    
        super.setUp();
        page = (<XDtClass:className/>Form) getPage(<XDtClass:className/>Form.class);
        
        // unfortunately this is a required step if you're calling 
        // getMessage in the page class
        page.setBundle(ResourceBundle.getBundle(MESSAGES));
        page.setValidationDelegate(new Validator());

        // this manager can be mocked if you want a more "pure" unit test
        <XDtForm:classNameLower/>Manager = (<XDtClass:className/>Manager) ctx.getBean("<XDtForm:classNameLower/>Manager");
        page.set<XDtClass:className/>Manager(<XDtForm:classNameLower/>Manager);
        
        // default request cycle
        page.setRequestCycle(getCycle(request, response));
    }

    protected void tearDown() throws Exception {
        super.tearDown();
        page = null;
    }

    public void testAdd() throws Exception {
        <XDtClass:className/> <XDtForm:classNameLower/> = new <XDtClass:className/>();
        // update the object's fields
        <XDtMethodEx:forAllMethods>
        <XDtMethodEx:ifMethodTagValueEquals tagName="hibernate.property" paramName="not-null" value="true">
        <XDtMethodEx:setterWithValue/>
        </XDtMethodEx:ifMethodTagValueEquals>
        </XDtMethodEx:forAllMethods>
        page.set<XDtClass:className/>(<XDtForm:classNameLower/>);

        page.save(page.getRequestCycle());
        assertFalse(page.hasErrors());
    }

    public void testSave() {
    	assertNotNull(<XDtForm:classNameLower/>Manager);
        <XDtClass:className/> <XDtForm:classNameLower/> = <XDtForm:classNameLower/>Manager.get<XDtClass:className/>("1");

        // update fields
        <XDtMethodEx:forAllMethods>
        <XDtMethodEx:ifMethodTagValueEquals tagName="hibernate.property" paramName="not-null" value="true">
        <XDtMethodEx:setterWithValue/>
        </XDtMethodEx:ifMethodTagValueEquals>
        </XDtMethodEx:forAllMethods>
        page.set<XDtClass:className/>(<XDtForm:classNameLower/>);

        page.save(page.getRequestCycle());
        assertFalse(page.hasErrors());
    }

    public void testRemove() throws Exception {
        <XDtClass:className/> <XDtForm:classNameLower/> = new <XDtClass:className/>();
        <XDtForm:classNameLower/>.<XDtMethodEx:idField getType="setterName"/>(new <XDtMethodEx:idField getType="propertyType"/>("2"));
        page.set<XDtClass:className/>(<XDtForm:classNameLower/>);

        page.delete(page.getRequestCycle());
        assertFalse(page.hasErrors());
    }
}

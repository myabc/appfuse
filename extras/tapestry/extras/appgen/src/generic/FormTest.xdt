<XDtTagDef:tagDef namespace="Form" handler="org.example.antbook.xdoclet.FormTagsHandler"/>package <XDtForm:parentPackageName/>.webapp.action;

import java.util.ResourceBundle;

import <XDtPackage:packageName/>.<XDtForm:className/>;
import <XDtForm:parentPackageName/>.service.Manager;

public class <XDtForm:className/>FormTest extends BasePageTestCase {
    private <XDtForm:className/>Form page;
    private Manager manager;

    protected void setUp() throws Exception {    
        super.setUp();
        page = (<XDtForm:className/>Form) getPage(<XDtForm:className/>Form.class);
        
        // unfortunately this is a required step if you're calling 
        // getMessage in the page class
        page.setBundle(ResourceBundle.getBundle(MESSAGES));
        page.setValidationDelegate(new Validator());

        // this manager can be mocked if you want a more "pure" unit test
        manager = (Manager) ctx.getBean("manager");
        page.setManager(manager);
        
        // default request cycle
        page.setRequestCycle(getCycle(request, response));
    }

    protected void tearDown() throws Exception {
        super.tearDown();
        page = null;
    }

    public void testAdd() throws Exception {
        <XDtForm:className/> <XDtForm:classNameLower/> = new <XDtForm:className/>();
        // update the object's fields
        <XDtMethodEx:forAllMethods>
        <XDtMethodEx:ifMethodTagValueEquals tagName="hibernate.property" paramName="not-null" value="true">
        <XDtMethodEx:setterWithValue/>
        </XDtMethodEx:ifMethodTagValueEquals>
        </XDtMethodEx:forAllMethods>
        page.set<XDtForm:className/>(<XDtForm:classNameLower/>);

        page.save(page.getRequestCycle());
        assertFalse(page.hasErrors());
    }

    public void testSave() {
    	assertNotNull(manager);
        <XDtForm:className/> <XDtForm:classNameLower/> = (<XDtForm:className/>) manager.getObject(<XDtForm:className/>.class, new Long(1));

        // update fields
        <XDtMethodEx:forAllMethods>
        <XDtMethodEx:ifMethodTagValueEquals tagName="hibernate.property" paramName="not-null" value="true">
        <XDtMethodEx:setterWithValue/>
        </XDtMethodEx:ifMethodTagValueEquals>
        </XDtMethodEx:forAllMethods>
        page.set<XDtForm:className/>(<XDtForm:classNameLower/>);

        page.save(page.getRequestCycle());
        assertFalse(page.hasErrors());
    }

    public void testRemove() throws Exception {
        <XDtForm:className/> <XDtForm:classNameLower/> = new <XDtForm:className/>();
        <XDtForm:classNameLower/>.<XDtMethodEx:idField getType="setterName"/>(new <XDtMethodEx:idField getType="propertyType"/>("2"));
        page.set<XDtForm:className/>(<XDtForm:classNameLower/>);

        page.delete(page.getRequestCycle());
        assertFalse(page.hasErrors());
    }
}

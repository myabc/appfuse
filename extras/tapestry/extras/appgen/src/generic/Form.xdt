<XDtTagDef:tagDef namespace="Form" handler="org.example.antbook.xdoclet.FormTagsHandler"/>package <XDtForm:parentPackageName/>.webapp.action;

import org.apache.tapestry.IRequestCycle;
import org.apache.tapestry.event.PageEvent;
import org.apache.tapestry.event.PageRenderListener;

import <XDtPackage:packageName/>.<XDtClass:className/>;
import <XDtForm:parentPackageName/>.service.Manager;

public abstract class <XDtClass:className/>Form extends BasePage implements PageRenderListener {
    public abstract Manager getManager();
    public abstract void setManager(Manager mgr);
    public abstract void set<XDtClass:className/>(<XDtClass:className/> <XDtForm:classNameLower/>);
    public abstract <XDtClass:className/> get<XDtClass:className/>();

    public void pageBeginRender(PageEvent event) {
        if ((get<XDtClass:className/>() == null) && !event.getRequestCycle().isRewinding()) {
            set<XDtClass:className/>(new <XDtClass:className/>());
        } else if (event.getRequestCycle().isRewinding()) { // add
            set<XDtClass:className/>(new <XDtClass:className/>());
        }
    }

    public void cancel(IRequestCycle cycle) {
        if (log.isDebugEnabled()) {
            log.debug("Entering 'cancel' method");
        }

        cycle.activate("<XDtForm:classNameLower/>s");
    }

    public void delete(IRequestCycle cycle) {
        if (log.isDebugEnabled()) {
            log.debug("entered 'delete' method");
        }

        getManager().removeObject(<XDtClass:className/>.class, get<XDtClass:className/>().getId());

        <XDtClass:className/>List nextPage = (<XDtClass:className/>List) cycle.getPage("<XDtForm:classNameLower/>s");
        nextPage.setMessage(getMessage("<XDtForm:classNameLower/>.deleted"));
        cycle.activate(nextPage);
    }

    public void save(IRequestCycle cycle) {
        if (getValidationDelegate().getHasErrors()) {
            return;
        }

        boolean isNew = (get<XDtClass:className/>().getId() == null);

        getManager().saveObject(get<XDtClass:className/>());

        String key = (isNew) ? "<XDtForm:classNameLower/>.added" : "<XDtForm:classNameLower/>.updated";

        if (isNew) {
            <XDtClass:className/>List nextPage = (<XDtClass:className/>List) cycle.getPage("<XDtForm:classNameLower/>s");
            nextPage.setMessage(getMessage(key));
            cycle.activate(nextPage);
        } else {
            <XDtClass:className/>Form nextPage = (<XDtClass:className/>Form) cycle.getPage("<XDtForm:classNameLower/>Form");
            nextPage.setMessage(getMessage(key));
            cycle.activate("<XDtForm:classNameLower/>Form"); // return to current page
        }
        
    }
}
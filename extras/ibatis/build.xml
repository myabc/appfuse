<!-- This file is designed to add iBatis support to AppFuse -->
<project name="ibatis" basedir="." default="help">

    <property name="lib.dir" location="../../lib"/>
    <property file="${lib.dir}/lib.properties"/>

    <!-- =================================================================== -->
    <!-- List options for this build file                                    -->
    <!-- =================================================================== -->
    <target name="help" description="Print usage for key targets">
    <echo>
    Key Targets:
                install: installs iBatis into AppFuse
              uninstall: uninstalls iBatis from AppFuse
    uninstall-hibernate: uninstalls Hibernate from AppFuse
                   test: creates appfuse-ibatis project and runs tests   

                   help: Print this help text...
    </echo>
    </target>

    <!-- =================================================================== -->
    <!-- Install iBatis as part of AppFuse                                   -->
    <!-- =================================================================== -->
    <target name="install"
        description="installs iBatis into the AppFuse base project">
        <echo level="info">Copying iBatis JARs to ../../lib</echo>
        <copy todir="${lib.dir}">
            <fileset dir="lib" includes="**"/>
        </copy>
        <echo level="info">Adding iBatis entries to ../../lib.properties</echo>
        <replace file="${lib.dir}/lib.properties">
            <replacetoken>hibernate.jar=${hibernate.dir}/hibernate3.jar</replacetoken>
            <replacevalue>hibernate.jar=${hibernate.dir}/hibernate3.jar

#
# iBATIS - http://www.ibatis.com/
#
ibatis.version=2.1.0
ibatis.dir=${lib.dir}/ibatis-${ibatis.version}
ibatis.jar=${ibatis.dir}/ibatis-sqlmap.jar

</replacevalue>
        </replace>

        <echo level="info">Adding iBatis classpath entries</echo>
        <replace file="../../properties.xml">
            <replacetoken><![CDATA[<!-- DAO -->
    <path id="dao.compile.classpath">
        <path refid="hibernate.classpath"/>]]></replacetoken>
            <replacevalue><![CDATA[<!-- iBatis -->
    <path id="ibatis.classpath">
        <fileset dir="${ibatis.dir}" includes="*.jar"/>
        <pathelement location="${database.jar}"/>
        <pathelement location="${commons-beanutils.jar}"/>
        <pathelement location="${commons-lang.jar}"/>
        <path location="${build.dir}/dao/classes"/>
    </path>

    <!-- DAO -->
    <path id="dao.compile.classpath">
        <path refid="hibernate.classpath"/>
        <path refid="ibatis.classpath"/>]]></replacevalue>
        </replace>

        <echo level="info">Modifying Eclipse .classpath file</echo>
        <replace file="../../.classpath">
            <replacetoken><![CDATA[<classpathentry kind="output" path="build/classes"/>]]></replacetoken>
            <replacevalue><![CDATA[<classpathentry kind="lib" path="lib/ibatis-2.1.0/ibatis-common-2.jar"/>
	<classpathentry kind="lib" path="lib/ibatis-2.1.0/ibatis-sqlmap-2.jar"/>
	<classpathentry kind="lib" path="lib/ibatis-2.1.0/jta.jar"/>
	<classpathentry kind="lib" path="lib/ibatis-2.1.0/oscache-2.1.jar"/>
	<classpathentry kind="output" path="build/classes"/>]]></replacevalue>
        </replace>

        <echo level="info">Changing dao.type to ibatis</echo>
        <replace file="../../properties.xml">
            <replacetoken><![CDATA[<property name="dao.type" value="hibernate"/>]]></replacetoken>
            <replacevalue><![CDATA[<property name="dao.type" value="ibatis"/>]]></replacevalue>
        </replace>

        <echo level="info">Adding iBatis JARs to WAR build</echo>
        <replace file="../../build.xml">
            <replacetoken><![CDATA[<lib dir="${spring.dir}" includes="*.jar" excludes="*mock.jar"/>]]></replacetoken>
            <replacevalue><![CDATA[<lib dir="${ibatis.dir}" includes="*.jar"/>
                <lib dir="${spring.dir}" includes="*.jar" excludes="*mock.jar"/>]]></replacevalue>
        </replace>

        <echo level="info">Commenting out Hibernate OSIV Filter</echo>
        <replace file="../../metadata/web/filter-mappings.xml">
        <replacetoken><![CDATA[<filter-mapping>
        <filter-name>hibernateFilter</filter-name>
        <url-pattern>*.html</url-pattern>
    </filter-mapping>]]></replacetoken>
            <replacevalue><![CDATA[<!--filter-mapping>
        <filter-name>hibernateFilter</filter-name>
        <url-pattern>*.html</url-pattern>
    </filter-mapping-->]]></replacevalue>
        </replace>

        <echo level="info">Copying src files to ../../src</echo>
        <copy todir="../../src" overwrite="true">
            <fileset dir="src"/>
        </copy>
        <echo level="info">Removing Hibernate-specific tests</echo>
        <delete>
            <fileset dir="../../test" includes="**/Generic*Test.java"/>
        </delete>
        <echo level="info">Removing generic "manager" bean definition</echo>
        <replace file="../../src/service/org/appfuse/service/applicationContext-service.xml">
        <replacetoken><![CDATA[
    <!-- Generic manager that can be used to do basic CRUD operations on any objects -->
    <bean id="manager" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.appfuse.service.impl.BaseManager">
                <property name="DAO"><ref bean="dao"/></property>
            </bean>
        </property>
    </bean>]]></replacetoken>
        </replace>
    </target>

    <!-- =================================================================== -->
    <!-- Uninstall iBatis from AppFuse                                       -->
    <!-- =================================================================== -->
    <target name="uninstall" description="uninstalls iBatis from AppFuse">
        <echo level="info">Deleting iBatis JARs from ../../lib</echo>
        <delete dir="${ibatis.dir}"/>

        <echo level="info">Removing iBatis entries from ../../lib.properties</echo>
        <replace file="${lib.dir}/lib.properties">
            <replacetoken>#
# iBATIS - http://www.ibatis.com/
#
ibatis.version=2.1.0
ibatis.dir=${lib.dir}/ibatis-${ibatis.version}
ibatis.jar=${ibatis.dir}/ibatis-sqlmap.jar

</replacetoken>
        </replace>

        <echo level="info">Removing iBatis classpath entries</echo>
        <replace file="../../properties.xml">
            <replacetoken><![CDATA[<!-- iBatis -->
    <path id="ibatis.classpath">
        <fileset dir="${ibatis.dir}" includes="*.jar"/>
        <pathelement location="${database.jar}"/>
        <pathelement location="${commons-beanutils.jar}"/>
        <pathelement location="${commons-lang.jar}"/>
        <path location="${build.dir}/dao/classes"/>
    </path>

    <!-- DAO -->
    <path id="dao.compile.classpath">
        <path refid="hibernate.classpath"/>
        <path refid="ibatis.classpath"/>]]></replacetoken>
            <replacevalue><![CDATA[<!-- DAO -->
    <path id="dao.compile.classpath">
        <path refid="hibernate.classpath"/>]]></replacevalue>
        </replace>

        <echo level="info">Modifying Eclipse .classpath file</echo>
        <replace file="../../.classpath">
            <replacetoken><![CDATA[<classpathentry kind="lib" path="lib/ibatis-2.1.0/ibatis-common-2.jar"/>
	<classpathentry kind="lib" path="lib/ibatis-2.1.0/ibatis-sqlmap-2.jar"/>
	<classpathentry kind="lib" path="lib/ibatis-2.1.0/jta.jar"/>
	<classpathentry kind="lib" path="lib/ibatis-2.1.0/oscache-2.1.jar"/>]]></replacetoken>
            <replacevalue></replacevalue>
        </replace>
        
        <echo level="info">Changing dao.type to hibernate</echo>
        <replace file="../../properties.xml">
            <replacetoken><![CDATA[<property name="dao.type" value="ibatis"/>]]></replacetoken>
            <replacevalue><![CDATA[<property name="dao.type" value="hibernate"/>]]></replacevalue>
        </replace>

        <echo level="info">Removing iBatis JARs from WAR build</echo>
        <replace file="../../build.xml">
            <replacetoken><![CDATA[<lib dir="${ibatis.dir}" includes="*.jar"/>
                <lib dir="${spring.dir}" includes="*.jar" excludes="*mock.jar"/>]]></replacetoken>
            <replacevalue><![CDATA[<lib dir="${spring.dir}" includes="*.jar" excludes="*mock.jar"/>]]></replacevalue>
        </replace>

        <echo level="info">Enabling Hibernate OSIV Filter</echo>
        <replace file="../../metadata/web/filter-mappings.xml">
        <replacetoken><![CDATA[<!--filter-mapping>
        <filter-name>hibernateFilter</filter-name>
        <url-pattern>*.html</url-pattern>
    </filter-mapping-->]]></replacetoken>
            <replacevalue><![CDATA[<filter-mapping>
        <filter-name>hibernateFilter</filter-name>
        <url-pattern>*.html</url-pattern>
    </filter-mapping>]]></replacevalue>
        </replace>

        <echo level="info">Removing src files from ../../src</echo>
        <delete dir="../../src/dao/org/appfuse/dao/ibatis"/>
    </target>

    <!-- =================================================================== -->
    <!-- Uninstall Hibernate from AppFuse                                    -->
    <!-- =================================================================== -->
    <target name="uninstall-hibernate" 
        description="uninstalls Hibernate from AppFuse">
        <echo level="info">NOTE: This target assumes you will use </echo>
        <echo level="info">  iBatis for database persistence.
        </echo>
        <echo level="info">Copying database creation scripts</echo>
        <copy todir="../../metadata/sql">
            <fileset dir="metadata/sql" includes="*.sql"/>
        </copy>

        <echo level="info">Copying jta.jar from Hibernate to iBATIS</echo>
        <copy todir="../../lib/ibatis-2.1.0">
            <fileset dir="${hibernate.dir}/lib" includes="jta.jar"/>
        </copy>
        <replace file="../../build.xml">
            <replacetoken><![CDATA[<fileset dir="${hibernate.dir}/lib" includes="jta.jar"/>]]></replacetoken>
            <replacevalue><![CDATA[<fileset dir="${ibatis.dir}" includes="jta.jar"/>]]></replacevalue>
        </replace>

        <echo level="info">Deleting Hibernate JARs from ../../lib</echo>
        <delete dir="${hibernate.dir}"/>

        <echo level="info">Removing Hibernate entries from ../../lib.properties</echo>
        <replace file="${lib.dir}/lib.properties">
            <replacetoken><![CDATA[

#
# Hibernate - http://hibernate.org
#
hibernate.version=3.0.5
hibernate.dir=${lib.dir}/hibernate-${hibernate.version}
hibernate.jar=${hibernate.dir}/hibernate3.jar]]></replacetoken>
        </replace>

        <echo level="info">Removing Hibernate classpath entries</echo>
        <replace file="../../properties.xml">
            <replacetoken><![CDATA[
    <!-- Hibernate -->
    <path id="hibernate.classpath">
        <pathelement location="${hibernate.jar}"/>
        <fileset dir="${hibernate.dir}/lib" includes="*.jar"/>
        <pathelement location="${database.jar}"/>
        <pathelement location="${commons-beanutils.jar}"/>
        <pathelement location="${commons-lang.jar}"/>
        <path location="${build.dir}/dao/classes"/>
    </path>
]]></replacetoken>
            <replacevalue></replacevalue>
        </replace>

        <replace file="../../properties.xml">
            <replacetoken><![CDATA[<!-- DAO -->
    <path id="dao.compile.classpath">
        <path refid="hibernate.classpath"/>]]></replacetoken>
            <replacevalue><![CDATA[<!-- DAO -->
    <path id="dao.compile.classpath">]]></replacevalue>
        </replace>
        
        <replace file="../../properties.xml">
            <replacetoken><![CDATA[<path refid="hibernate.classpath"/>]]></replacetoken>
            <replacevalue><![CDATA[<path refid="ibatis.classpath"/>]]></replacevalue>
        </replace>

        <echo level="info">Modifying Eclipse .classpath file</echo>
        <replace file="../../.classpath">
            <replacetoken><![CDATA[<classpathentry kind="lib" path="lib/hibernate-3.0.5/hibernate3.jar"/>
	<classpathentry kind="lib" path="lib/hibernate-3.0.5/lib/antlr-2.7.5H3.jar"/>
	<classpathentry kind="lib" path="lib/hibernate-3.0.5/lib/asm.jar"/>
	<classpathentry kind="lib" path="lib/hibernate-3.0.5/lib/c3p0-0.8.5.2.jar"/>
	<classpathentry kind="lib" path="lib/hibernate-3.0.5/lib/cglib-2.1.jar"/>
	<classpathentry kind="lib" path="lib/hibernate-3.0.5/lib/dom4j-1.6.jar"/>
	<classpathentry kind="lib" path="lib/hibernate-3.0.5/lib/ehcache-1.1.jar"/>
	<classpathentry kind="lib" path="lib/hibernate-3.0.5/lib/jta.jar"/>
	<classpathentry kind="lib" path="lib/hibernate-3.0.5/lib/oscache-2.1.jar"/>
	<classpathentry kind="lib" path="lib/hibernate-3.0.5/lib/swarmcache-1.0rc2.jar"/>]]></replacetoken>
            <replacevalue></replacevalue>
        </replace>
        
        <echo level="info">Removing all references to Hibernate in build.xml</echo>
        
        <!-- Remove hibernate.unnecessary check -->
        <replace file="../../build.xml">
            <replacetoken><![CDATA[        
        <!-- Make sure hibernatedoclet is necessary -->
        <uptodate property="hibernatedoclet.unnecessary">
            <srcfiles dir="src/dao" includes="**/*.java"/>
            <srcfiles dir="${build.dir}/dao/gen" includes="**/*.java"/>
            <mapper type="glob" from="*.java"
        </uptodate>
        ]]></replacetoken>
            <replacevalue></replacevalue>
        </replace>

        <!-- Remove Hibernate dialect entry -->
        <replace file="../../build.xml">
            <replacetoken><![CDATA[<filter token="HIBERNATE-DIALECT" value="${hibernate.dialect}"/>
        <filter token="DAO-TYPE" value="${dao.type}"/>]]></replacetoken>
        </replace>

        <!-- Remove hibernatedoclet target -->
        <replace file="../../build.xml">
            <replacetoken><![CDATA[        
    <!-- =================================================================== -->
    <!-- The "hibernatedoclet" target generates Hibernate mapping files      -->
    <!-- based on XDoclet marked-up Plain Old Java Object (POJO)             -->
    <!-- =================================================================== -->
    <target name="hibernatedoclet" depends="prepare" unless="hibernatedoclet.unnecessary"
        description="Generate Hibernate mapping files">

        <taskdef name="hibernatedoclet"
            classname="xdoclet.modules.hibernate.HibernateDocletTask"
            classpathref="xdoclet.classpath"/>

        <!-- generate hibernate files -->
        <hibernatedoclet destdir="${build.dir}/dao/gen" mergedir="metadata/dao"
            excludedtags="@version,@author" addedtags="@xdoclet-generated at ${TODAY}"
            force="${xdoclet.force}">
            <fileset dir="src/dao"/>
            <hibernate validatexml="true" version="3.0"/>
        </hibernatedoclet>
    </target>
]]></replacetoken>
        </replace>

        <!-- Replace 'hibernatedoclet' dependencies with "init" -->
        <replace file="../../build.xml">
            <replacetoken>depends="hibernatedoclet"</replacetoken>
            <replacevalue>depends="prepare"</replacevalue>
        </replace>

        <!-- Remove JARs from being includes in WAR -->
        <replace file="../../build.xml">
            <replacetoken><![CDATA[<lib dir="${displaytag.dir}" includes="*.jar"/>
            <lib file="${hibernate.jar}"/>
            <lib dir="${hibernate.dir}/lib" includes="*.jar" excludes="jta.jar"/>]]></replacetoken>
            <replacevalue><![CDATA[<lib dir="${displaytag.dir}" includes="*.jar"/>]]></replacevalue>
        </replace>

        <echo level="info">Replacing "schemaexport" with "sql"</echo>
        <replace file="../../build.xml">
            <replacetoken><![CDATA[<target name="db-prepare" depends="clean,package-dao"
        description="creates database tables">
        <taskdef name="schemaexport"
            classname="org.hibernate.tool.hbm2ddl.SchemaExportTask">
            <classpath>
                <path refid="xdoclet.classpath"/>
                <path refid="hibernate.classpath"/>
            </classpath>
        </taskdef>

        <generate-database-properties/>
        <schemaexport quiet="no" text="no" drop="no" delimiter=";" 
            properties="database.properties" output="create-tables.sql">
            <fileset dir="${build.dir}/dao/gen" includes="**/*.hbm.xml"/>
        </schemaexport>]]></replacetoken>
            <replacevalue><![CDATA[<target name="db-prepare" description="creates database tables">
        <sql driver="${database.driver_class}" url="${database.url}"
             userid="${database.username}" password="${database.password}">

            <classpath>
                <pathelement location="${database.jar}"/>
            </classpath>

            <fileset dir="metadata/sql">
                <include name="${database.type}-create-tables.sql"/>
            </fileset>
         </sql>]]></replacevalue>
        </replace>
        <replace file="../../build.xml">
            <replacetoken><![CDATA[<target name="db-drop" depends="hibernatedoclet"
        description="drops database tables">
        <taskdef name="schemaexport"
            classname="org.hibernate.tool.hbm2ddl.SchemaExportTask">
            <classpath>
                <path refid="xdoclet.classpath"/>
                <path refid="hibernate.classpath"/>
            </classpath>
        </taskdef>

        <generate-database-properties/>
        <schemaexport quiet="no" text="no" drop="yes" delimiter=";"
            properties="database.properties" output="drop-tables.sql">
            <fileset dir="${build.dir}/dao/gen" includes="**/*.hbm.xml"/>
        </schemaexport>]]></replacetoken>
            <replacevalue><![CDATA[<target name="db-drop" description="drops database tables">
        <sql driver="${database.driver_class}" url="${database.url}"
             userid="${database.username}" password="${database.password}">

            <classpath>
                <pathelement location="${database.jar}"/>
            </classpath>

            <fileset dir="metadata/sql">
                <include name="${database.type}-drop-tables.sql"/>
            </fileset>
         </sql>]]></replacevalue>
        </replace>

        <echo level="info">Removing Hibernate OSIV Filter</echo>
        <replace file="../../metadata/web/filter-mappings.xml">
        <replacetoken><![CDATA[<!-- The 'hibernateFilter', a.k.a. Spring's OpenSessionInViewFilter
         guarantees one session per request.  Performance seems to be the
         same if it's enabled or disabled. -->
    <filter-mapping>
        <filter-name>hibernateFilter</filter-name>
        <url-pattern>*.html</url-pattern>
    </filter-mapping>]]></replacetoken>
            <replacevalue></replacevalue>
        </replace>

        <!-- Remove Hibernate OSIV Filter from filter.xml -->
        <replace file="../../metadata/web/filters.xml">
        <replacetoken><![CDATA[<filter>
        <filter-name>hibernateFilter</filter-name>
        <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
    </filter>]]></replacetoken>
            <replacevalue></replacevalue>
        </replace>
        
        <echo level="info">Removing src files from ../../src</echo>
        <delete dir="../../src/dao/org/appfuse/dao/hibernate"/>

        <!-- I'm purposely not removing the hibernate stuff from the "javadoc" target,
            it's not causing any harm, so I figured I'd leave it in. -->
    </target>
 
    <!-- =================================================================== -->
    <!-- Creates new project, installs iBATIS, removes Hibernate and tests   -->
    <!-- =================================================================== -->
    <target name="test" description="Creates appfuse-ibatis and runs tests">
        <property name="app.name" value="appfuse-ibatis"/>
        <property name="db.name" value="appfuse"/>
        <property name="new.pkg.name" value="org.appfuse"/>
        <delete dir="../../../${app.name}"/>
        <ant dir="../.." target="new"/>

        <!-- New project created, install iBATIS, remove Hibernate and run tests -->
        <ant dir="../../../${app.name}/extras/ibatis" target="install" inheritAll="false"/>
        <ant dir="../../../${app.name}/extras/ibatis" target="uninstall-hibernate" inheritAll="false"/>
        <ant dir="../../../${app.name}" target="setup" inheritAll="false"/>
        <ant dir="../../../${app.name}" target="test-all" inheritAll="false"/>

        <echo>You can start Tomcat to view ${app.name} manually.</echo>
    </target>

    <!-- =================================================================== -->
    <!-- Creates new project, installs iBATIS with Hibernate and tests       -->
    <!-- =================================================================== -->
    <target name="test-with-hibernate"
        description="Creates appfuse-ibatis+hibernate and runs tests">
        <!-- NOTE: 2 dashes in the app name doesn't work -->   
        <property name="app.name" value="appfuse-hibatis"/>
        <property name="db.name" value="appfuse"/>
        <property name="new.pkg.name" value="org.appfuse"/>
        <delete dir="../../../${app.name}"/>
        <ant dir="../.." target="new"/>

        <!-- New project created, install iBATIS and run tests -->
        <ant dir="../../../${app.name}/extras/ibatis" target="install" inheritAll="false"/>
        <ant dir="../../../${app.name}" target="setup" inheritAll="false"/>
        <ant dir="../../../${app.name}" target="test-all" inheritAll="false"/>

        <echo>You can start Tomcat to view ${app.name} manually.</echo>
    </target>

    <target name="test-all" depends="test"
        description="Tests iBATIS install with and without Hibernate">
        <antcall target="test-with-hibernate" inheritAll="false"/>
    </target>
</project>

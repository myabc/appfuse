package org.appfuse.model;

import junit.framework.TestCase;


// JUnitDoclet end import

/**
 * Generated by JUnitDoclet, a tool provided by
 * ObjectFab GmbH under LGPL.
 * Please see www.junitdoclet.org, www.gnu.org
 * and www.objectfab.de for informations about
 * the tool, the licence and the authors.
 */
public class UserTest extends TestCase
// JUnitDoclet end extends_implements
 {
    //~ Instance fields ========================================================

    // JUnitDoclet begin class
    User user = null;

    //~ Constructors ===========================================================

    // JUnitDoclet end class
    public UserTest(String name) {
        // JUnitDoclet begin method UserTest
        super(name);

        // JUnitDoclet end method UserTest
    }

    //~ Methods ================================================================

    public User createInstance()
    throws Exception {
        // JUnitDoclet begin method testcase.createInstance
        return new User();

        // JUnitDoclet end method testcase.createInstance
    }

    protected void setUp() throws Exception {
        // JUnitDoclet begin method testcase.setUp
        super.setUp();
        user = createInstance();

        // JUnitDoclet end method testcase.setUp
    }

    protected void tearDown() throws Exception {
        // JUnitDoclet begin method testcase.tearDown
        user = null;
        super.tearDown();

        // JUnitDoclet end method testcase.tearDown
    }

    public void testAddRole() throws Exception {
        // JUnitDoclet begin method addRole
        // JUnitDoclet end method addRole
    }


    public void testSetGetId() throws Exception {
        // JUnitDoclet begin method setId getId
        java.lang.Long[] tests =
        {
            new Long(Long.MIN_VALUE), new Long(-1), new Long(0), new Long(1),
            new Long(Long.MAX_VALUE), null
        };

        for (int i = 0; i < tests.length; i++) {
            user.setId(tests[i]);
            assertEquals(tests[i], user.getId());
        }

        // JUnitDoclet end method setId getId
    }

    public void testSetGetAddress() throws Exception {
        // JUnitDoclet begin method setAddress getAddress
        java.lang.String[] tests =
        { "", " ", "a", "A", "ä", "ß", "0123456789", "012345678901234567890", "\n", null };

        for (int i = 0; i < tests.length; i++) {
            user.setAddress(tests[i]);
            assertEquals(tests[i], user.getAddress());
        }

        // JUnitDoclet end method setAddress getAddress
    }

    public void testSetGetCity() throws Exception {
        // JUnitDoclet begin method setCity getCity
        java.lang.String[] tests =
        { "", " ", "a", "A", "ä", "ß", "0123456789", "012345678901234567890", "\n", null };

        for (int i = 0; i < tests.length; i++) {
            user.setCity(tests[i]);
            assertEquals(tests[i], user.getCity());
        }

        // JUnitDoclet end method setCity getCity
    }

    public void testSetGetCountry() throws Exception {
        // JUnitDoclet begin method setCountry getCountry
        java.lang.String[] tests =
        { "", " ", "a", "A", "ä", "ß", "0123456789", "012345678901234567890", "\n", null };

        for (int i = 0; i < tests.length; i++) {
            user.setCountry(tests[i]);
            assertEquals(tests[i], user.getCountry());
        }

        // JUnitDoclet end method setCountry getCountry
    }

    public void testSetGetEmail() throws Exception {
        // JUnitDoclet begin method setEmail getEmail
        java.lang.String[] tests =
        { "", " ", "a", "A", "ä", "ß", "0123456789", "012345678901234567890", "\n", null };

        for (int i = 0; i < tests.length; i++) {
            user.setEmail(tests[i]);
            assertEquals(tests[i], user.getEmail());
        }

        // JUnitDoclet end method setEmail getEmail
    }

    public void testSetGetFirstName() throws Exception {
        // JUnitDoclet begin method setFirstName getFirstName
        java.lang.String[] tests =
        { "", " ", "a", "A", "ä", "ß", "0123456789", "012345678901234567890", "\n", null };

        for (int i = 0; i < tests.length; i++) {
            user.setFirstName(tests[i]);
            assertEquals(tests[i], user.getFirstName());
        }

        // JUnitDoclet end method setFirstName getFirstName
    }

    public void testSetGetLastName() throws Exception {
        // JUnitDoclet begin method setLastName getLastName
        java.lang.String[] tests =
        { "", " ", "a", "A", "ä", "ß", "0123456789", "012345678901234567890", "\n", null };

        for (int i = 0; i < tests.length; i++) {
            user.setLastName(tests[i]);
            assertEquals(tests[i], user.getLastName());
        }

        // JUnitDoclet end method setLastName getLastName
    }

    public void testSetGetPassword() throws Exception {
        // JUnitDoclet begin method setPassword getPassword
        java.lang.String[] tests =
        { "", " ", "a", "A", "ä", "ß", "0123456789", "012345678901234567890", "\n", null };

        for (int i = 0; i < tests.length; i++) {
            user.setPassword(tests[i]);
            assertEquals(tests[i], user.getPassword());
        }

        // JUnitDoclet end method setPassword getPassword
    }

    public void testSetGetPhoneNumber() throws Exception {
        // JUnitDoclet begin method setPhoneNumber getPhoneNumber
        java.lang.String[] tests =
        { "", " ", "a", "A", "ä", "ß", "0123456789", "012345678901234567890", "\n", null };

        for (int i = 0; i < tests.length; i++) {
            user.setPhoneNumber(tests[i]);
            assertEquals(tests[i], user.getPhoneNumber());
        }

        // JUnitDoclet end method setPhoneNumber getPhoneNumber
    }

    public void testSetGetPostalCode() throws Exception {
        // JUnitDoclet begin method setPostalCode getPostalCode
        java.lang.String[] tests =
        { "", " ", "a", "A", "ä", "ß", "0123456789", "012345678901234567890", "\n", null };

        for (int i = 0; i < tests.length; i++) {
            user.setPostalCode(tests[i]);
            assertEquals(tests[i], user.getPostalCode());
        }

        // JUnitDoclet end method setPostalCode getPostalCode
    }

    public void testSetGetProvince() throws Exception {
        // JUnitDoclet begin method setProvince getProvince
        java.lang.String[] tests =
        { "", " ", "a", "A", "ä", "ß", "0123456789", "012345678901234567890", "\n", null };

        for (int i = 0; i < tests.length; i++) {
            user.setProvince(tests[i]);
            assertEquals(tests[i], user.getProvince());
        }

        // JUnitDoclet end method setProvince getProvince
    }

    public void testSetGetUsername() throws Exception {
        // JUnitDoclet begin method setUsername getUsername
        java.lang.String[] tests =
        { "", " ", "a", "A", "ä", "ß", "0123456789", "012345678901234567890", "\n", null };

        for (int i = 0; i < tests.length; i++) {
            user.setUsername(tests[i]);
            assertEquals(tests[i], user.getUsername());
        }

        // JUnitDoclet end method setUsername getUsername
    }

    public void testSetGetWebsite() throws Exception {
        // JUnitDoclet begin method setWebsite getWebsite
        java.lang.String[] tests =
        { "", " ", "a", "A", "ä", "ß", "0123456789", "012345678901234567890", "\n", null };

        for (int i = 0; i < tests.length; i++) {
            user.setWebsite(tests[i]);
            assertEquals(tests[i], user.getWebsite());
        }

        // JUnitDoclet end method setWebsite getWebsite
    }

    public void testSetGetRoles() throws Exception {
        // JUnitDoclet begin method setRoles getRoles
        java.util.List[] tests = { new java.util.ArrayList(), null };

        for (int i = 0; i < tests.length; i++) {
            user.setRoles(tests[i]);
            assertEquals(tests[i], user.getRoles());
        }

        // JUnitDoclet end method setRoles getRoles
    }

    /**
     * JUnitDoclet moves marker to this method, if there is not match
     * for them in the regenerated code and if the marker is not empty.
     * This way, no test gets lost when regenerating after renaming.
     * Method testVault is supposed to be empty.
     */
    public void testVault() throws Exception {
        // JUnitDoclet begin method testcase.testVault
        // JUnitDoclet end method testcase.testVault
    }

    public static void main(String[] args) {
        // JUnitDoclet begin method testcase.main
        junit.textui.TestRunner.run(UserTest.class);

        // JUnitDoclet end method testcase.main
    }
}
